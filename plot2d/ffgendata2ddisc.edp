/*ffgendata2ddisc.edp Generates some vertex/triangle data in order to
 *                    be plot in Matlab
 *
 *  Calculate temperature distribution in a heated sheet metal disc
 *  employing heat transfer and one fixed border temperature.
 *  Write the mesh information to tridata2ddisc.txt.
 *
 * Author: Chloros2 <chloros2@gmx.de>
 * Created: 2018-05-13
 *
 * Copyright (C) 2018 Chloros2 <chloros2@gmx.de>
 * 
 * This program is free software: you can redistribute it and/or modify it
 * under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 * 
 * This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see
 * <https://www.gnu.org/licenses/>.
 *
 */

real r1=0.15,r2=0.02;
border outer(t=0,2*pi){x=r1*cos(t);y=r1*sin(t);label=1;}
border inner(t=0,2*pi){x=r2*cos(t)-0.06;y=r2*sin(t)+0.04;label=2;}

int ka=375,ki=35;
mesh Th=buildmesh(outer(ka)+inner(-ki));

fespace Vh(Th,P1);
Vh u,v;

int N=10;
real[int] ri(N),xp(N),yp(N);

ri=[0.008,0.01,0.004,0.007,0.02,0.012,0.008,0.006,0.008,0.009];
xp=[0.0,0.09,-0.06,0.06,0.06,-0.04,-0.12,-0.07,0.07,0.01];
yp=[0.0,-0.08,0.09,-0.04,0.02,-0.1,-0.0,-0.05,0.08,0.11];

real[int] p(N),phi(N);
p=8.1;       //[W] / source
real a=55.7; //[W/m^2K]
real l=0.2;  //[W/m]

//phi[i]=p[i]/(pi*ri[i]^2)
phi=ri.*ri;
phi=p./phi;
phi/=pi;

Vh q=phi[0]*((x-xp[0])^2+(y-yp[0])^2<=ri[0]^2)+
     phi[1]*((x-xp[1])^2+(y-yp[1])^2<=ri[1]^2)+
     phi[2]*((x-xp[2])^2+(y-yp[2])^2<=ri[2]^2)+
     phi[3]*((x-xp[3])^2+(y-yp[3])^2<=ri[3]^2)+
     phi[4]*((x-xp[4])^2+(y-yp[4])^2<=ri[4]^2)+
     phi[5]*((x-xp[5])^2+(y-yp[5])^2<=ri[5]^2)+
     phi[6]*((x-xp[6])^2+(y-yp[6])^2<=ri[6]^2)+
     phi[7]*((x-xp[7])^2+(y-yp[7])^2<=ri[7]^2)+
     phi[8]*((x-xp[8])^2+(y-yp[8])^2<=ri[8]^2)+
     phi[9]*((x-xp[9])^2+(y-yp[9])^2<=ri[9]^2);

/* solve
 * u_xx+u_yy=-(q(x,y)-a*u)/l
 * where
 * a ~ heat transfer coefficient [W/m^2K]
 * q ~ heat flux density [W/m^2]
 * l ~ lateral heat conductivity * sheet metal thickness [W/K]
 */
problem heat(u,v)=int2d(Th)(dx(u)*dx(v)+dy(u)*dy(v)+(a/l)*u*v)
                 -int2d(Th)(q(x,y)*v/l)
                 +on(2,u=13);

real error=0.005;
for (int i=0;i<1;i++){
  heat;
  Th=adaptmesh(Th,u,err=error);
  error=error/2.0;
} ;
//call once more so that mesh and u is synchronised!
heat;

ofstream datamesh ("tridata2ddisc.txt");
for (int i=0; i<Th.nt; i++){
  for (int j=0; j<3; j++){
    datamesh << Th[i][j].x << ";"
             << Th[i][j].y << ";"
             << u[][Vh(i,j)] << "\n";
  }
}

plot(u,wait=true,fill=true,value=true);
